# Copyright Â© 2023 Horizoncd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.1
info:
  title: Horizon Application Restful
  version: 2.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v2/groups/{groupID}/applications:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramGroupID'
      - name: extraOwner
        in: query
        description: extra owner's email
        schema:
          type: string
        required: false
    post:
      tags:
        - application
      operationId: createApplication
      summary: create a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateApplicationRequestV2"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/CreateApplicationResponseV2"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/applications/{applicationID}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramApplicationID'
    put:
      tags:
        - application
      operationId: updateApplication
      summary: update a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateApplicationRequestV2"
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
      - application
      operationId: getApplication
      summary: get a application
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/GetApplicationResponseV2"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    delete:
      tags:
        - application
      operationId: deleteApplication
      summary: delete a application
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/applications/{applicationID}/transfer:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramApplicationID'
      - $ref: "common.yaml#/components/parameters/queryGroupID"
    put:
      tags:
        - application
      operationId: transferApplication
      summary: transfer a application to target group
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/applications/{applicationID}/selectableregions:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramApplicationID'
      - name: env
        in: query
        description: environment name
        required: true
        schema:
          type: string
    get:
      tags:
        - application
      operationId: listSelectableRegions
      summary: list selectable regions of a application
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegionPart"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/applications/{applicationID}/pipelinestats:
    get:
      tags:
        - pipelinerun
      operationId: getPipelineStats
      summary: get pipeline stats of application
      parameters:
        - $ref: 'common.yaml#/components/parameters/paramApplicationID'
        - $ref: 'common.yaml#/components/parameters/pageNumber'
        - $ref: 'common.yaml#/components/parameters/pageSize'
        - name: cluster
          schema:
            type: string
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PipelineStats"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/applications:
    get:
      tags:
        - application
      description: list applications
      operationId: listApplications
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: userID
          in: query
          schema:
            type: number
        - name: pageNumber
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          schema: 
            type: number
            minimum: 0
            default: 10
        - name: template
          in: query
          schema:
            type: string
        - name: release
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                      items:
                        $ref: "#/components/schemas/ListApplicationResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
components:
  schemas:
    ID:
      type: integer
    Name:
      type: string
    Description:
      type: string
    Priority:
      type: string
    URL:
      type: string
    Subfolder:
      type: string
    Branch:
      type: string
    Tag:
      type: string
    Commit:
      type: string
    TemplateName:
      type: string
    Release:
      type: string
    FullPath:
      type: string
    FullName:
      type: string
    GroupID:
      type: integer
    DisplayName:
      type: string
    Disabled:
      type: boolean
    IsDefault:
      type: boolean
    CreatedAt:
      $ref: "common.yaml#/components/schemas/Date"
    UpdatedAt:
      $ref: "common.yaml#/components/schemas/Date"
    Git:
      type: object
      properties:
        url:
          $ref: "#/components/schemas/URL"
        subfolder:
          $ref: "#/components/schemas/Subfolder"
        branch:
          $ref: "#/components/schemas/Branch"
        tag:
          $ref: "#/components/schemas/Tag"
        commit:
          $ref: "#/components/schemas/Commit"
    Image:
      type: string
    BuildConfig:
      type: object
      additionalProperties: true
    Manifest:
      type: object
      additionalProperties: true
    TemplateConfig:
      type: object
      additionalProperties: true
    TemplateInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/TemplateName"
        release:
          $ref: "#/components/schemas/Release"
    ExtraMembers:
      type: object
      additionalProperties:
        type: string

    CreateOrUpdateApplicationRequestV2:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        priority:
          $ref: "#/components/schemas/Priority"
        git:
          $ref: "#/components/schemas/Git"
        image:
          $ref: "#/components/schemas/Image"
        buildConfig:
          $ref: "#/components/schemas/BuildConfig"
        templateInfo:
          $ref: "#/components/schemas/TemplateInfo"
        templateConfig:
          $ref: "#/components/schemas/TemplateConfig"
        extraMembers:
          $ref: "#/components/schemas/ExtraMembers"

    CreateApplicationResponseV2:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        priority:
          $ref: "#/components/schemas/Priority"
        fullPath:
          $ref: "#/components/schemas/FullPath"
        groupID:
          $ref: "#/components/schemas/GroupID"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"

    GetApplicationResponseV2:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        priority:
          $ref: "#/components/schemas/Priority"
        git:
          $ref: "#/components/schemas/Git"
        image:
          $ref: "#/components/schemas/Image"
        buildConfig:
          $ref: "#/components/schemas/BuildConfig"
        templateInfo:
          $ref: "#/components/schemas/TemplateInfo"
        templateConfig:
          $ref: "#/components/schemas/TemplateConfig"
        manifest:
          $ref: "#/components/schemas/Manifest"
        fullPath:
          $ref: "#/components/schemas/FullPath"
        groupID:
          $ref: "#/components/schemas/GroupID"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"

    ListApplicationResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          $ref: "#/components/schemas/Name"
        fullPath:
          $ref: "#/components/schemas/FullPath"
        fullName:
          $ref: "#/components/schemas/FullName"
        groupID:
          $ref: "#/components/schemas/GroupID"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"

    RegionPart:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        displayName:
          $ref: "#/components/schemas/DisplayName"
        disabled:
          $ref: "#/components/schemas/Disabled"
        isDefault:
          $ref: "#/components/schemas/IsDefault"

    Step:
      type: string
    Task:
      type: string
    Result:
      type: string
    Duration:
      type: integer

    StepStats:
      type: object
      properties:
        step:
          $ref: "#/components/schemas/Step"
        result:
          $ref: "#/components/schemas/Result"
        duration:
          $ref: "#/components/schemas/Duration"

    TaskStats:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
        result:
          $ref: "#/components/schemas/Result"
        duration:
          $ref: "#/components/schemas/Duration"
        steps:
          type: array
          items:
            $ref: "#/components/schemas/StepStats"

    PipelinerunID:
      type: integer
    Application:
      type: string
    Cluster:
      type: string
    Pipeline:
      type: string
    StartedAt:
      $ref: "common.yaml#/components/schemas/Date"

    PipelineStats:
      type: object
      properties:
        pipelinerunID:
          $ref: "#/components/schemas/PipelinerunID"
        application:
          $ref: "#/components/schemas/Application"
        cluster:
          $ref: "#/components/schemas/Cluster"
        pipeline:
          $ref: "#/components/schemas/Pipeline"
        result:
          $ref: "#/components/schemas/Result"
        duration:
          $ref: "#/components/schemas/Duration"
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskStats"
        startedAt:
          $ref: "#/components/schemas/StartedAt"